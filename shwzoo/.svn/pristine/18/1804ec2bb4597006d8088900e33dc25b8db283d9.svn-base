<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yinlian.wssc.web.mapper.ShopcartMapper">
	<resultMap id="BaseResultMap" type="com.yinlian.wssc.web.po.Shopcart">
		<id column="ID" property="id" jdbcType="INTEGER" />
		<result column="UserID" property="userid" jdbcType="INTEGER" />
		<result column="ShopID" property="shopid" jdbcType="INTEGER" />
		<result column="ShopName" property="shopname" jdbcType="VARCHAR" />
		<result column="ActivityID" property="activityid" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		ID, UserID, ShopID, ShopName, ActivityID
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.yinlian.wssc.web.po.ShopcartExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from shopcart
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from shopcart
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from shopcart
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.yinlian.wssc.web.po.ShopcartExample">
		delete from shopcart
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.yinlian.wssc.web.po.Shopcart">
		insert into shopcart (ID, UserID, ShopID,
		ShopName, ActivityID)
		values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER},
		#{shopid,jdbcType=INTEGER},
		#{shopname,jdbcType=VARCHAR}, #{activityid,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.yinlian.wssc.web.po.Shopcart">
		insert into shopcart
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="userid != null">
				UserID,
			</if>
			<if test="shopid != null">
				ShopID,
			</if>
			<if test="shopname != null">
				ShopName,
			</if>
			<if test="activityid != null">
				ActivityID,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userid != null">
				#{userid,jdbcType=INTEGER},
			</if>
			<if test="shopid != null">
				#{shopid,jdbcType=INTEGER},
			</if>
			<if test="shopname != null">
				#{shopname,jdbcType=VARCHAR},
			</if>
			<if test="activityid != null">
				#{activityid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.yinlian.wssc.web.po.ShopcartExample"
		resultType="java.lang.Integer">
		select count(*) from shopcart
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update shopcart
		<set>
			<if test="record.id != null">
				ID = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.userid != null">
				UserID = #{record.userid,jdbcType=INTEGER},
			</if>
			<if test="record.shopid != null">
				ShopID = #{record.shopid,jdbcType=INTEGER},
			</if>
			<if test="record.shopname != null">
				ShopName = #{record.shopname,jdbcType=VARCHAR},
			</if>
			<if test="record.activityid != null">
				ActivityID = #{record.activityid,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update shopcart
		set ID = #{record.id,jdbcType=INTEGER},
		UserID = #{record.userid,jdbcType=INTEGER},
		ShopID = #{record.shopid,jdbcType=INTEGER},
		ShopName = #{record.shopname,jdbcType=VARCHAR},
		ActivityID = #{record.activityid,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.yinlian.wssc.web.po.Shopcart">
		update shopcart
		<set>
			<if test="userid != null">
				UserID = #{userid,jdbcType=INTEGER},
			</if>
			<if test="shopid != null">
				ShopID = #{shopid,jdbcType=INTEGER},
			</if>
			<if test="shopname != null">
				ShopName = #{shopname,jdbcType=VARCHAR},
			</if>
			<if test="activityid != null">
				ActivityID = #{activityid,jdbcType=INTEGER},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.yinlian.wssc.web.po.Shopcart">
		update shopcart
		set UserID = #{userid,jdbcType=INTEGER},
		ShopID = #{shopid,jdbcType=INTEGER},
		ShopName = #{shopname,jdbcType=VARCHAR},
		ActivityID = #{activityid,jdbcType=INTEGER}
		where ID = #{id,jdbcType=INTEGER}
	</update>

	<insert id="insertCart" parameterType="com.yinlian.wssc.web.po.Shopcart">
		<!-- selectKey将主键返回，需要再返回 -->
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			select
			LAST_INSERT_ID()
		</selectKey>
		insert into shopcart (ID, UserID, ShopID,
		ShopName, ActivityID)
		values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER},
		#{shopid,jdbcType=INTEGER},
		#{shopname,jdbcType=VARCHAR}, #{activityid,jdbcType=INTEGER})
	</insert>

	<delete id="deleteByUser" parameterType="java.lang.Integer">
		delete from shopcart where UserID=#{0}
	</delete>

	<delete id="deleteByShop" parameterType="java.lang.Integer">
		delete from shopcart where ShopID=#{0}
	</delete>

	<select id="getByUserAndShop" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select ID,UserID ,ShopID,ShopName,ActivityID
		from shopcart where UserID=#{0} and ShopID = #{1} limit 1
	</select>

	<select id="getByUser" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select ID,UserID ,ShopID,ShopName,ActivityID
		from shopcart where UserID=#{0}
	</select>

	<select id="getV_ShopCartByUser" parameterType="java.lang.Integer"
		resultType="com.yinlian.api.app.dto.V_ShopCart">
		SELECT sc.UserID, sc.ShopID, sc.ShopName, sc.ActivityID, scp.ID,
		scp.ShopCartID, scp.Type, scp.ProID, scp.ProName, scp.ProCount,
		scp.SpecsInfo, scp.MarketID,
		scp.PackPros, scp.SpuID, scp.IsSelected, scp.SpikeID,
		 scp.UseTime,scp.price
		FROM ShopCart AS sc JOIN
		ShopCartPros AS scp ON sc.ID = scp.ShopCartID
		where sc.UserID=#{0}
	</select>
	<select id="getBuyCartByUser" parameterType="java.lang.Integer"
		resultType="com.yinlian.api.app.dto.V_ShopCart">
		SELECT sc.UserID, sc.ShopID, sc.ShopName, sc.ActivityID, scp.ID,
		scp.ShopCartID, scp.Type, scp.ProID, scp.ProName, scp.ProCount,
		scp.SpecsInfo, scp.MarketID,
		scp.PackPros, scp.SpuID, scp.IsSelected, scp.SpikeID,scp.price
		FROM ShopCart AS sc JOIN
		ShopCartPros AS scp ON sc.ID = scp.ShopCartID
		where sc.UserID=#{0} and scp.IsSelected=1
	</select>
</mapper>