<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yinlian.wssc.web.mapper.SkuPackageMapper">
	<resultMap id="BaseResultMap" type="com.yinlian.wssc.web.po.SkuPackage">
		<id column="ID" property="id" jdbcType="INTEGER" />
		<result column="PackageID" property="packageid" jdbcType="INTEGER" />
		<result column="SKUID" property="skuid" jdbcType="INTEGER" />
		<result column="SKUPrice" property="skuprice" jdbcType="REAL" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		ID, PackageID, SKUID, SKUPrice
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.yinlian.wssc.web.po.SkuPackageExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from sku_package
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from sku_package
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		sku_package
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.yinlian.wssc.web.po.SkuPackageExample">
		delete from sku_package
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.yinlian.wssc.web.po.SkuPackage">
		insert into sku_package (ID,
		PackageID, SKUID,
		SKUPrice)
		values (#{id,jdbcType=INTEGER},
		#{packageid,jdbcType=INTEGER},
		#{skuid,jdbcType=INTEGER},
		#{skuprice,jdbcType=REAL})
	</insert>
	<insert id="insertSelective" parameterType="com.yinlian.wssc.web.po.SkuPackage">
		insert into sku_package
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="packageid != null">
				PackageID,
			</if>
			<if test="skuid != null">
				SKUID,
			</if>
			<if test="skuprice != null">
				SKUPrice,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="packageid != null">
				#{packageid,jdbcType=INTEGER},
			</if>
			<if test="skuid != null">
				#{skuid,jdbcType=INTEGER},
			</if>
			<if test="skuprice != null">
				#{skuprice,jdbcType=REAL},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.yinlian.wssc.web.po.SkuPackageExample"
		resultType="java.lang.Integer">
		select count(*) from sku_package
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update sku_package
		<set>
			<if test="record.id != null">
				ID = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.packageid != null">
				PackageID = #{record.packageid,jdbcType=INTEGER},
			</if>
			<if test="record.skuid != null">
				SKUID = #{record.skuid,jdbcType=INTEGER},
			</if>
			<if test="record.skuprice != null">
				SKUPrice = #{record.skuprice,jdbcType=REAL},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update sku_package
		set ID = #{record.id,jdbcType=INTEGER},
		PackageID =
		#{record.packageid,jdbcType=INTEGER},
		SKUID =
		#{record.skuid,jdbcType=INTEGER},
		SKUPrice =
		#{record.skuprice,jdbcType=REAL}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.yinlian.wssc.web.po.SkuPackage">
		update sku_package
		<set>
			<if test="packageid != null">
				PackageID = #{packageid,jdbcType=INTEGER},
			</if>
			<if test="skuid != null">
				SKUID = #{skuid,jdbcType=INTEGER},
			</if>
			<if test="skuprice != null">
				SKUPrice = #{skuprice,jdbcType=REAL},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.yinlian.wssc.web.po.SkuPackage">
		update sku_package
		set PackageID = #{packageid,jdbcType=INTEGER},
		SKUID =
		#{skuid,jdbcType=INTEGER},
		SKUPrice = #{skuprice,jdbcType=REAL}
		where ID
		= #{id,jdbcType=INTEGER}
	</update>

	<delete id="deleteByPackageID" parameterType="int">
		delete from
		sku_package
		where PackageID=#{0}
	</delete>

	<select id="getPackSkuList" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from sku_package
		where PackageID=#{0}
	</select>

	<select id="queryBySkuId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		 b.ID, b.PackageID, b.SKUID, b.SKUPrice
		from sku_package b join package a on b.PackageID=a.id
		where b.SKUID = #{0} 
		AND a.EndTime>=SYSDATE() AND a.StartTime<![CDATA[ <= ]]>SYSDATE()
		AND a.IsCheck=1
		and FIND_IN_SET(#{1},a.usesite)
	</select>
	<select id="getCoutBySkuId" resultType="java.lang.Integer">
		select
		count(1)
		from sku_package join package a on sku_package.PackageID=a.id
		where sku_package.SKUID =#{0} 
		AND a.EndTime>=SYSDATE() AND a.StartTime<![CDATA[ <= ]]>SYSDATE()
		AND a.IsCheck=1
		and FIND_IN_SET(#{1},a.usesite)
	</select>
	<select id="selectByPkid" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from sku_package
		where PackageID = #{packageid,jdbcType=INTEGER}
	</select>
</mapper>