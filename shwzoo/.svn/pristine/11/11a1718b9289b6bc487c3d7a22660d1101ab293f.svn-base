<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yinlian.wssc.web.mapper.StoreLevelMapper">
	<resultMap id="BaseResultMap" type="com.yinlian.wssc.web.po.StoreLevel">
		<id column="ID" property="id" jdbcType="INTEGER" />
		<result column="SName" property="name" jdbcType="VARCHAR" />
		<result column="Status" property="status" jdbcType="INTEGER" />
		<result column="Sort" property="sort" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		ID,SName,Status,Sort
	</sql>
	<select id="select" resultMap="BaseResultMap"
		parameterType="com.yinlian.wssc.web.po.StoreLevel">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from storelevel
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from storelevel
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<select id="getAllList" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from storelevel
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		storelevel
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="delete" parameterType="com.yinlian.wssc.web.po.StoreLevel">
		delete from storelevel
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.yinlian.wssc.web.po.StoreLevel">
		insert into storelevel (ID,
		SName,Status,Sort
		)
		values (#{id,jdbcType=INTEGER},
		#{name,jdbcType=VARCHAR},
		#{status,jdbcType=INTEGER},
		#{sort,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.yinlian.wssc.web.po.StoreLevel">
		insert into storelevel
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="name != null">
				SName,
			</if>
			<if test="status != null">
				Status,
			</if>
			<if test="sort != null">
				Sort,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				#{sort,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="getPageList" parameterType="com.yinlian.wssc.web.util.PageBeanUtil"
		resultMap="BaseResultMap">
		select ID, Name, Num, SPU_ID, Price,OldPrice,
		AppPrice, Stock, WarnNum,
		SalesCount,
		GroupID, Status, IsUseVipPrice, VipLevel,
		VipPrice,AppVipPrice
		from sku
		<if test="criteria != null ">
			<include refid="criteria_query" />
		</if>
		<if test="criteria.orderByClause != null and criteria.orderByClause != '' ">
			order by ${criteria.orderByClause} ${criteria.sort}  <!-- 排序不为空 就排序 此处只能使用${} 
				而不能使用#{} 会设置参数失败 -->
		</if>
	</select>
	<sql id="criteria_query">
		<where>
			<if test="criteria.id != null and criteria.id!= '' ">
				and id=#{criteria.id}
			</if>
		</where>
	</sql>
	<select id="countByExample" parameterType="com.yinlian.wssc.web.po.StoreLevel"
		resultType="java.lang.Integer">
		select count(*) from storelevel
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateSelective" parameterType="map">
		update storelevel
		<set>
			<if test="record.id != null">
				ID = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				SName = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.status != null">
				Status = #{record.status,jdbcType=INTEGER},
			</if>
			<if test="record.sort != null">
				Sort = #{record.sort,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<!-- <update id="update" parameterType="map"> -->
	<!-- update storelevel -->
	<!-- set ID = #{record.id,jdbcType=INTEGER}, -->
	<!-- SName = -->
	<!-- #{record.name,jdbcType=VARCHAR}, -->
	<!-- Status = -->
	<!-- #{record.status,jdbcType=INTEGER}, -->
	<!-- Sort = -->
	<!-- #{record.sort,jdbcType=INTEGER} -->
	<!-- <if test="_parameter != null"> -->
	<!-- <include refid="Update_By_Example_Where_Clause" /> -->
	<!-- </if> -->
	<!-- </update> -->
	<update id="updateByPrimaryKeySelective" parameterType="com.yinlian.wssc.web.po.StoreLevel">
		update storelevel
		<set>
			<if test="name != null">
				SName = #{name,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				Status = #{status,jdbcType=INTEGER},
			</if>
			<if test="sort != null">
				Sort = #{sort,jdbcType=INTEGER},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="update" parameterType="com.yinlian.wssc.web.po.StoreLevel">
		update storelevel
		set SName
		=#{name,jdbcType=VARCHAR},
		Status = #{status,jdbcType=INTEGER},
		Sort=#{sort,jdbcType=INTEGER}
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateStatusById" parameterType="com.yinlian.wssc.web.po.StoreLevel">
		update storelevel
		set Status = #{status,jdbcType=INTEGER}
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateSortById" parameterType="com.yinlian.wssc.web.po.StoreLevel">
		update storelevel
		set Status = #{status,jdbcType=INTEGER}
		where ID = #{id,jdbcType=INTEGER}
	</update>
</mapper>