<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">


	<context:component-scan
		base-package="com.yinlian.wssc.platform.controller,
	com.yinlian.wssc.platform.view.controller,
	com.yinlian.wssc.seller.controller,
	com.yinlian.wssc.seller.view.controller,
	com.yinlian.api.app.controller,
	com.yinlian.api.controller,
	com.yinlian.view.wap.controller,
	com.yinlian.view.pc.controller,
	com.yinlian.api.wap.controller,
	com.yinlian.app.controller,
	com.yinlian.app.view.controller,
	com.yinlian.pc.controller,
	com.techown.wssc.platform.view.controller,
	com.techown.wssc.platform.controller,
	com.techown.app.controller"
	></context:component-scan>

	<bean name="handlerAdapter"
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="webBindingInitializer">
			<bean
				class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
				<!-- <property name="conversionService" ref="conversionService"></property> -->
				<property name="validator">
					<bean
						class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
						<property name="providerClass"
							value="org.hibernate.validator.HibernateValidator"></property>
						<property name="validationMessageSource" ref="messageSource" />
					</bean>
				</property>
			</bean>
		</property>
		<property name="messageConverters">
			<list>
				<ref bean="byteArrayConverter" />
				<ref bean="jaxbConverter" />
				<ref bean="jsonConverter" />
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter"></bean>
				<bean
					class="org.springframework.http.converter.ResourceHttpMessageConverter"></bean>
				<bean
					class="org.springframework.http.converter.xml.SourceHttpMessageConverter"></bean>
				<bean
					class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter"></bean>
				<bean
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
			</list>
		</property>
	</bean>
	<bean name="byteArrayConverter"
		class="org.springframework.http.converter.ByteArrayHttpMessageConverter"></bean>
	<bean name="jaxbConverter"
		class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter"></bean>
	<bean name="jsonConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
	<bean name="caseInsensitivePathMatcher"
		class="com.yinlian.wssc.web.config.CaseInsensitivePathMatcher" />
	<bean name="handlerMapping"
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<property name="pathMatcher" ref="caseInsensitivePathMatcher"></property>
	</bean>

	<!-- Spring MVC配置 -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="org.beetl.json.ext.BeetlJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>text/json;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
				<!-- property name="actions"> <map> <entry key="stringQuoteCheck"> <bean 
					class="org.beetl.json.util.StringQuoteCheck" /> </entry> </map> </property -->
				<property name="policys">
					<map>
						<entry key="~L/java.lang.String/" value="!quote" />
						<entry key="~d" value="f/yyyy-MM-dd HH:mm:ss/" />
						<entry key="~c" value="?null->[]" />
					</map>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<bean id="beetlConfig" class="org.beetl.ext.spring.BeetlGroupUtilConfiguration"
		init-method="init">
		<property name="configFileResource" value="/WEB-INF/beetl.properties" />

	</bean>

	<!-- Beetl视图解析器1 -->
	<bean name="beetlViewResolver" class="org.beetl.ext.spring.BeetlSpringViewResolver">
		<!-- 多视图解析器，需要设置viewNames和order -->
		<property name="viewNames">
			<list>
				<value>/template/**</value>
			</list>
		</property>
		<property name="suffix" value=".html" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="order" value="0" />
		<!-- 多GroupTemplate，需要指定使用的bean -->
		<property name="config" ref="beetlConfig" />
	</bean>

	<!-- <mvc:resources location="/js/" mapping="/js/**" /> <mvc:resources location="/scripts/" 
		mapping="/scripts/**" /> <mvc:resources location="/images/" mapping="/images/**" 
		/> <mvc:resources location="/css/" mapping="/css/**" /> <mvc:resources location="/decorators/" 
		mapping="/decorators/**" /> <mvc:resources location="/pv/" mapping="/pv/**" 
		/> <mvc:resources location="/sv/" mapping="/sv/**" /> <mvc:resources location="/pfm/" 
		mapping="/pfm/**" /> <mvc:resources location="/wap/js/" mapping="/wap/js/**" 
		/> <mvc:resources location="/wap/images/" mapping="/wap/images/**" /> <mvc:resources 
		location="/wap/css/" mapping="/wap/css/**" /> <mvc:resources location="/template/pc/css/" 
		mapping="/template/pc/css/**" /> <mvc:resources location="/template/pc/js/" 
		mapping="/template/pc/js/**" /> <mvc:resources location="/template/pc/images/" 
		mapping="/template/pc/images/**" /> -->
	<mvc:resources location="/resource/" mapping="/resource/**" />


     	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="order" value="255" /> 
		<property name="prefix" value="/WEB-INF/jsp/" /> 
		<property name="suffix" value=".jsp" /> 
		<property name="contentType" value="text/html;charset=UTF-8" /> 
		</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:CustomValidationMessages</value>
			</list>
		</property>
		<property name="fileEncodings" value="utf-8" />
		<property name="cacheSeconds" value="120" />
	</bean>

	<bean class="com.yinlian.wssc.web.exception.GlobalExceptionResolver"></bean>
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize">
			<value>5242880</value>
		</property>
	</bean>

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/platform/**" />
			<mvc:exclude-mapping path="/platform/user/toLogin" />
			<bean class="com.yinlian.wssc.web.interceptor.LoginPlatformInterceptor"></bean>
		</mvc:interceptor>

		<mvc:interceptor>
			<mvc:mapping path="/seller/**" />
			<mvc:exclude-mapping path="/seller/user/**" />
			<mvc:exclude-mapping path="/app/api/**" />
			<bean class="com.yinlian.wssc.web.interceptor.LoginSellerInterceptor"></bean>
		</mvc:interceptor>
		
		<mvc:interceptor>
			<mvc:mapping path="/zoo/**" />
			<mvc:exclude-mapping path="/zoo/image/getSignature" />
			<mvc:exclude-mapping path="/zoo/image/upload" />
			<bean class="com.techown.wssc.web.interceptor.LoginPlatformInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	<context:property-placeholder location="classpath:zoo.properties" />
</beans>