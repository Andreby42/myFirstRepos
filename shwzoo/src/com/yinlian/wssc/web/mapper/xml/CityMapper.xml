<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yinlian.wssc.web.mapper.CityMapper">
	<resultMap id="BaseResultMap" type="com.yinlian.wssc.web.po.City">
		<id column="ID" property="id" jdbcType="INTEGER" />
		<result column="Code" property="code" jdbcType="VARCHAR" />
		<result column="Name" property="name" jdbcType="VARCHAR" />
		<result column="ProvinceCode" property="provincecode" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		ID, Code, Name, ProvinceCode
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.yinlian.wssc.web.po.CityExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from city
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from city
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectByName" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from city
		where Name = #{name} limit 1
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from city
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.yinlian.wssc.web.po.CityExample">
		delete from city
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.yinlian.wssc.web.po.City">
		insert into city (ID, Code,
		Name,
		ProvinceCode)
		values (#{id,jdbcType=INTEGER},
		#{code,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},
		#{provincecode,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.yinlian.wssc.web.po.City">
		insert into city
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="code != null">
				Code,
			</if>
			<if test="name != null">
				Name,
			</if>
			<if test="provincecode != null">
				ProvinceCode,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="provincecode != null">
				#{provincecode,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.yinlian.wssc.web.po.CityExample"
		resultType="java.lang.Integer">
		select count(*) from city
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update city
		<set>
			<if test="record.id != null">
				ID = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.code != null">
				Code = #{record.code,jdbcType=VARCHAR},
			</if>
			<if test="record.name != null">
				Name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.provincecode != null">
				ProvinceCode = #{record.provincecode,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update city
		set ID = #{record.id,jdbcType=INTEGER},
		Code =
		#{record.code,jdbcType=VARCHAR},
		Name =
		#{record.name,jdbcType=VARCHAR},
		ProvinceCode =
		#{record.provincecode,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.yinlian.wssc.web.po.City">
		update city
		<set>
			<if test="code != null">
				Code = #{code,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				Name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="provincecode != null">
				ProvinceCode = #{provincecode,jdbcType=VARCHAR},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.yinlian.wssc.web.po.City">
		update city
		set
		Code = #{code,jdbcType=VARCHAR},
		Name = #{name,jdbcType=VARCHAR},
		ProvinceCode = #{provincecode,jdbcType=VARCHAR}
		where ID =
		#{id,jdbcType=INTEGER}
	</update>

	<select id="selectNameByCode" parameterType="java.lang.String"
		resultType="java.lang.String">
		SELECT NAME FROM city WHERE CODE = #{code}
	</select>

	<select id="queryCity" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from city
		<where>
			<if test="parentCode != null and parentCode !=''">
				ProvinceCode = #{parentCode}
			</if>
		</where>
	</select>


	<select id="queryCityCode" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from city
		where Name = #{0} and ProvinceCode=#{1} limit 1
	</select>
	<resultMap type="com.yinlian.api.app.dto.CitySpDto" id="cityspmap">
		<id column="sp" property="sp" jdbcType="VARCHAR" />
		<collection property="list" ofType="com.yinlian.api.app.dto.CityDto" >
			<id column="code" property="code" jdbcType="VARCHAR" />
			<result column="name" property="name" jdbcType="VARCHAR" />
		</collection>
	</resultMap>

	<select id="getCityAllList" resultMap="cityspmap">
		Select `Code` , name,
		getsp(name) as sp
		FROM city ORDER
		BY sp

	</select>
</mapper>