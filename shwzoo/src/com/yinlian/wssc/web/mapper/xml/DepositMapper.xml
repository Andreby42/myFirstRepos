<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yinlian.wssc.web.mapper.DepositMapper" >
  <resultMap id="BaseResultMap" type="com.yinlian.wssc.web.po.Deposit" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="ProductName" property="productname" jdbcType="VARCHAR" />
    <result column="AddTime" property="addtime" jdbcType="TIMESTAMP" />
    <result column="UserID" property="userid" jdbcType="INTEGER" />
    <result column="UserName" property="username" jdbcType="VARCHAR" />
    <result column="Price" property="price" jdbcType="REAL" />
    <result column="PriceType" property="pricetype" jdbcType="INTEGER" />
    <result column="Mark" property="mark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, ProductName, AddTime, UserID, UserName, Price, PriceType, Mark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yinlian.wssc.web.po.DepositExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from deposit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from deposit
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from deposit
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yinlian.wssc.web.po.DepositExample" >
    delete from deposit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yinlian.wssc.web.po.Deposit" >
    insert into deposit (ID, ProductName, AddTime, 
      UserID, UserName, Price, 
      PriceType, Mark)
    values (#{id,jdbcType=INTEGER}, #{productname,jdbcType=VARCHAR}, #{addtime,jdbcType=TIMESTAMP}, 
      #{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{price,jdbcType=REAL}, 
      #{pricetype,jdbcType=INTEGER}, #{mark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yinlian.wssc.web.po.Deposit" >
    insert into deposit
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="productname != null" >
        ProductName,
      </if>
      <if test="addtime != null" >
        AddTime,
      </if>
      <if test="userid != null" >
        UserID,
      </if>
      <if test="username != null" >
        UserName,
      </if>
      <if test="price != null" >
        Price,
      </if>
      <if test="pricetype != null" >
        PriceType,
      </if>
      <if test="mark != null" >
        Mark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="productname != null" >
        #{productname,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=REAL},
      </if>
      <if test="pricetype != null" >
        #{pricetype,jdbcType=INTEGER},
      </if>
      <if test="mark != null" >
        #{mark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yinlian.wssc.web.po.DepositExample" resultType="java.lang.Integer" >
    select count(*) from deposit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update deposit
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.productname != null" >
        ProductName = #{record.productname,jdbcType=VARCHAR},
      </if>
      <if test="record.addtime != null" >
        AddTime = #{record.addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userid != null" >
        UserID = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        UserName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        Price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.pricetype != null" >
        PriceType = #{record.pricetype,jdbcType=INTEGER},
      </if>
      <if test="record.mark != null" >
        Mark = #{record.mark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update deposit
    set ID = #{record.id,jdbcType=INTEGER},
      ProductName = #{record.productname,jdbcType=VARCHAR},
      AddTime = #{record.addtime,jdbcType=TIMESTAMP},
      UserID = #{record.userid,jdbcType=INTEGER},
      UserName = #{record.username,jdbcType=VARCHAR},
      Price = #{record.price,jdbcType=REAL},
      PriceType = #{record.pricetype,jdbcType=INTEGER},
      Mark = #{record.mark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yinlian.wssc.web.po.Deposit" >
    update deposit
    <set >
      <if test="productname != null" >
        ProductName = #{productname,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        AddTime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null" >
        UserID = #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        UserName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        Price = #{price,jdbcType=REAL},
      </if>
      <if test="pricetype != null" >
        PriceType = #{pricetype,jdbcType=INTEGER},
      </if>
      <if test="mark != null" >
        Mark = #{mark,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yinlian.wssc.web.po.Deposit" >
    update deposit
    set ProductName = #{productname,jdbcType=VARCHAR},
      AddTime = #{addtime,jdbcType=TIMESTAMP},
      UserID = #{userid,jdbcType=INTEGER},
      UserName = #{username,jdbcType=VARCHAR},
      Price = #{price,jdbcType=REAL},
      PriceType = #{pricetype,jdbcType=INTEGER},
      Mark = #{mark,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>