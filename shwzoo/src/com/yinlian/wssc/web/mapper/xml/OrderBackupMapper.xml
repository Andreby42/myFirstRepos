<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yinlian.wssc.web.mapper.OrderBackupMapper" >
  <resultMap id="BaseResultMap" type="com.yinlian.wssc.web.po.OrderBackup" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="Code" property="code" jdbcType="VARCHAR" />
    <result column="GroupCode" property="groupcode" jdbcType="VARCHAR" />
    <result column="Status" property="status" jdbcType="INTEGER" />
    <result column="BuyerID" property="buyerid" jdbcType="INTEGER" />
    <result column="SellerID" property="sellerid" jdbcType="INTEGER" />
    <result column="Price" property="price" jdbcType="DECIMAL" />
    <result column="Freight" property="freight" jdbcType="DECIMAL" />
    <result column="PayType" property="paytype" jdbcType="INTEGER" />
    <result column="CouponID" property="couponid" jdbcType="INTEGER" />
    <result column="LogisticsName" property="logisticsname" jdbcType="VARCHAR" />
    <result column="LogisticsCode" property="logisticscode" jdbcType="VARCHAR" />
    <result column="AddOrderDate" property="addorderdate" jdbcType="TIMESTAMP" />
    <result column="PayDate" property="paydate" jdbcType="TIMESTAMP" />
    <result column="AddDate" property="adddate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, Code, GroupCode, Status, BuyerID, SellerID, Price, Freight, PayType, CouponID, 
    LogisticsName, LogisticsCode, AddOrderDate, PayDate, AddDate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yinlian.wssc.web.po.OrderBackupExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_backup
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order_backup
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_backup
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yinlian.wssc.web.po.OrderBackupExample" >
    delete from order_backup
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yinlian.wssc.web.po.OrderBackup" >
    insert into order_backup (ID, Code, GroupCode, 
      Status, BuyerID, SellerID, 
      Price, Freight, PayType, 
      CouponID, LogisticsName, LogisticsCode, 
      AddOrderDate, PayDate, AddDate
      )
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{groupcode,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{buyerid,jdbcType=INTEGER}, #{sellerid,jdbcType=INTEGER}, 
      #{price,jdbcType=DECIMAL}, #{freight,jdbcType=DECIMAL}, #{paytype,jdbcType=INTEGER}, 
      #{couponid,jdbcType=INTEGER}, #{logisticsname,jdbcType=VARCHAR}, #{logisticscode,jdbcType=VARCHAR}, 
      #{addorderdate,jdbcType=TIMESTAMP}, #{paydate,jdbcType=TIMESTAMP}, #{adddate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yinlian.wssc.web.po.OrderBackup" >
    insert into order_backup
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="code != null" >
        Code,
      </if>
      <if test="groupcode != null" >
        GroupCode,
      </if>
      <if test="status != null" >
        Status,
      </if>
      <if test="buyerid != null" >
        BuyerID,
      </if>
      <if test="sellerid != null" >
        SellerID,
      </if>
      <if test="price != null" >
        Price,
      </if>
      <if test="freight != null" >
        Freight,
      </if>
      <if test="paytype != null" >
        PayType,
      </if>
      <if test="couponid != null" >
        CouponID,
      </if>
      <if test="logisticsname != null" >
        LogisticsName,
      </if>
      <if test="logisticscode != null" >
        LogisticsCode,
      </if>
      <if test="addorderdate != null" >
        AddOrderDate,
      </if>
      <if test="paydate != null" >
        PayDate,
      </if>
      <if test="adddate != null" >
        AddDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="groupcode != null" >
        #{groupcode,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="buyerid != null" >
        #{buyerid,jdbcType=INTEGER},
      </if>
      <if test="sellerid != null" >
        #{sellerid,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="freight != null" >
        #{freight,jdbcType=DECIMAL},
      </if>
      <if test="paytype != null" >
        #{paytype,jdbcType=INTEGER},
      </if>
      <if test="couponid != null" >
        #{couponid,jdbcType=INTEGER},
      </if>
      <if test="logisticsname != null" >
        #{logisticsname,jdbcType=VARCHAR},
      </if>
      <if test="logisticscode != null" >
        #{logisticscode,jdbcType=VARCHAR},
      </if>
      <if test="addorderdate != null" >
        #{addorderdate,jdbcType=TIMESTAMP},
      </if>
      <if test="paydate != null" >
        #{paydate,jdbcType=TIMESTAMP},
      </if>
      <if test="adddate != null" >
        #{adddate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yinlian.wssc.web.po.OrderBackupExample" resultType="java.lang.Integer" >
    select count(*) from order_backup
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order_backup
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null" >
        Code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.groupcode != null" >
        GroupCode = #{record.groupcode,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        Status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.buyerid != null" >
        BuyerID = #{record.buyerid,jdbcType=INTEGER},
      </if>
      <if test="record.sellerid != null" >
        SellerID = #{record.sellerid,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        Price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.freight != null" >
        Freight = #{record.freight,jdbcType=DECIMAL},
      </if>
      <if test="record.paytype != null" >
        PayType = #{record.paytype,jdbcType=INTEGER},
      </if>
      <if test="record.couponid != null" >
        CouponID = #{record.couponid,jdbcType=INTEGER},
      </if>
      <if test="record.logisticsname != null" >
        LogisticsName = #{record.logisticsname,jdbcType=VARCHAR},
      </if>
      <if test="record.logisticscode != null" >
        LogisticsCode = #{record.logisticscode,jdbcType=VARCHAR},
      </if>
      <if test="record.addorderdate != null" >
        AddOrderDate = #{record.addorderdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paydate != null" >
        PayDate = #{record.paydate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.adddate != null" >
        AddDate = #{record.adddate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order_backup
    set ID = #{record.id,jdbcType=INTEGER},
      Code = #{record.code,jdbcType=VARCHAR},
      GroupCode = #{record.groupcode,jdbcType=VARCHAR},
      Status = #{record.status,jdbcType=INTEGER},
      BuyerID = #{record.buyerid,jdbcType=INTEGER},
      SellerID = #{record.sellerid,jdbcType=INTEGER},
      Price = #{record.price,jdbcType=DECIMAL},
      Freight = #{record.freight,jdbcType=DECIMAL},
      PayType = #{record.paytype,jdbcType=INTEGER},
      CouponID = #{record.couponid,jdbcType=INTEGER},
      LogisticsName = #{record.logisticsname,jdbcType=VARCHAR},
      LogisticsCode = #{record.logisticscode,jdbcType=VARCHAR},
      AddOrderDate = #{record.addorderdate,jdbcType=TIMESTAMP},
      PayDate = #{record.paydate,jdbcType=TIMESTAMP},
      AddDate = #{record.adddate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yinlian.wssc.web.po.OrderBackup" >
    update order_backup
    <set >
      <if test="code != null" >
        Code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="groupcode != null" >
        GroupCode = #{groupcode,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=INTEGER},
      </if>
      <if test="buyerid != null" >
        BuyerID = #{buyerid,jdbcType=INTEGER},
      </if>
      <if test="sellerid != null" >
        SellerID = #{sellerid,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        Price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="freight != null" >
        Freight = #{freight,jdbcType=DECIMAL},
      </if>
      <if test="paytype != null" >
        PayType = #{paytype,jdbcType=INTEGER},
      </if>
      <if test="couponid != null" >
        CouponID = #{couponid,jdbcType=INTEGER},
      </if>
      <if test="logisticsname != null" >
        LogisticsName = #{logisticsname,jdbcType=VARCHAR},
      </if>
      <if test="logisticscode != null" >
        LogisticsCode = #{logisticscode,jdbcType=VARCHAR},
      </if>
      <if test="addorderdate != null" >
        AddOrderDate = #{addorderdate,jdbcType=TIMESTAMP},
      </if>
      <if test="paydate != null" >
        PayDate = #{paydate,jdbcType=TIMESTAMP},
      </if>
      <if test="adddate != null" >
        AddDate = #{adddate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yinlian.wssc.web.po.OrderBackup" >
    update order_backup
    set Code = #{code,jdbcType=VARCHAR},
      GroupCode = #{groupcode,jdbcType=VARCHAR},
      Status = #{status,jdbcType=INTEGER},
      BuyerID = #{buyerid,jdbcType=INTEGER},
      SellerID = #{sellerid,jdbcType=INTEGER},
      Price = #{price,jdbcType=DECIMAL},
      Freight = #{freight,jdbcType=DECIMAL},
      PayType = #{paytype,jdbcType=INTEGER},
      CouponID = #{couponid,jdbcType=INTEGER},
      LogisticsName = #{logisticsname,jdbcType=VARCHAR},
      LogisticsCode = #{logisticscode,jdbcType=VARCHAR},
      AddOrderDate = #{addorderdate,jdbcType=TIMESTAMP},
      PayDate = #{paydate,jdbcType=TIMESTAMP},
      AddDate = #{adddate,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>