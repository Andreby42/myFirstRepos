<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yinlian.wssc.web.mapper.SpikeshopMapper">
	<resultMap id="BaseResultMap" type="com.yinlian.wssc.web.po.Spikeshop">
		<id column="ID" property="id" jdbcType="INTEGER" />
		<result column="SpikeID" property="spikeid" jdbcType="INTEGER" />
		<result column="ShopID" property="shopid" jdbcType="INTEGER" />
		<result column="Status" property="status" jdbcType="INTEGER" />
		<result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
		<result column="CreateUserID" property="createuserid" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		ID, SpikeID, ShopID, Status, CreateTime, CreateUserID
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.yinlian.wssc.web.po.SpikeshopExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from spikeshop
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from spikeshop
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from spikeshop
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.yinlian.wssc.web.po.SpikeshopExample">
		delete from spikeshop
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.yinlian.wssc.web.po.Spikeshop">
		insert into spikeshop (ID, SpikeID, ShopID,
		Status, CreateTime, CreateUserID
		)
		values (#{id,jdbcType=INTEGER}, #{spikeid,jdbcType=INTEGER},
		#{shopid,jdbcType=INTEGER},
		#{status,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{createuserid,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.yinlian.wssc.web.po.Spikeshop">
		insert into spikeshop
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="spikeid != null">
				SpikeID,
			</if>
			<if test="shopid != null">
				ShopID,
			</if>
			<if test="status != null">
				Status,
			</if>
			<if test="createtime != null">
				CreateTime,
			</if>
			<if test="createuserid != null">
				CreateUserID,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="spikeid != null">
				#{spikeid,jdbcType=INTEGER},
			</if>
			<if test="shopid != null">
				#{shopid,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="createuserid != null">
				#{createuserid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.yinlian.wssc.web.po.SpikeshopExample"
		resultType="java.lang.Integer">
		select count(*) from spikeshop
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update spikeshop
		<set>
			<if test="record.id != null">
				ID = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.spikeid != null">
				SpikeID = #{record.spikeid,jdbcType=INTEGER},
			</if>
			<if test="record.shopid != null">
				ShopID = #{record.shopid,jdbcType=INTEGER},
			</if>
			<if test="record.status != null">
				Status = #{record.status,jdbcType=INTEGER},
			</if>
			<if test="record.createtime != null">
				CreateTime = #{record.createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.createuserid != null">
				CreateUserID = #{record.createuserid,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update spikeshop
		set ID = #{record.id,jdbcType=INTEGER},
		SpikeID = #{record.spikeid,jdbcType=INTEGER},
		ShopID = #{record.shopid,jdbcType=INTEGER},
		Status = #{record.status,jdbcType=INTEGER},
		CreateTime = #{record.createtime,jdbcType=TIMESTAMP},
		CreateUserID = #{record.createuserid,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.yinlian.wssc.web.po.Spikeshop">
		update spikeshop
		<set>
			<if test="spikeid != null">
				SpikeID = #{spikeid,jdbcType=INTEGER},
			</if>
			<if test="shopid != null">
				ShopID = #{shopid,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				Status = #{status,jdbcType=INTEGER},
			</if>
			<if test="createtime != null">
				CreateTime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="createuserid != null">
				CreateUserID = #{createuserid,jdbcType=INTEGER},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.yinlian.wssc.web.po.Spikeshop">
		update spikeshop
		set SpikeID = #{spikeid,jdbcType=INTEGER},
		ShopID = #{shopid,jdbcType=INTEGER},
		Status = #{status,jdbcType=INTEGER},
		CreateTime = #{createtime,jdbcType=TIMESTAMP},
		CreateUserID = #{createuserid,jdbcType=INTEGER}
		where ID = #{id,jdbcType=INTEGER}
	</update>
    <!-- 店铺申请活动审核 -->
	<update id="updateCheck" parameterType="java.lang.Integer" >
		update spikeshop
		set Status = #{1}
		where id=#{0}
	</update>
 <!-- 店铺申请活动批量审核 -->
	<update id="updateCheckList" parameterType="java.util.List">
		<if test="list != null">
			<foreach collection="list" item="spikeshop" index="index"
				open="" close="" separator=";">
				update spikeshop
				set Status =
				#{spikeshop.status,jdbcType=INTEGER}
				where
				id=#{spikeshop.id,jdbcType=INTEGER}
			</foreach>
		</if>
	</update>
	 <!-- 根据活动ID获取申请记录 -->
	<select id="getBySpikeID" parameterType="java.lang.Integer" resultMap="BaseResultMap">
	select 
	<include refid="Base_Column_List" />
	from spikeshop
	where SpikeID=#{0}
	</select>
</mapper>