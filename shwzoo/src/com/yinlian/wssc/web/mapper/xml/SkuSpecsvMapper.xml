<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yinlian.wssc.web.mapper.SkuSpecsvMapper">
	<resultMap id="BaseResultMap" type="com.yinlian.wssc.web.po.SkuSpecsv">
		<id column="ID" property="id" jdbcType="INTEGER" />
		<result column="SKU_ID" property="skuId" jdbcType="INTEGER" />
		<result column="SpecsV_ID" property="specsvId" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		ID, SKU_ID, SpecsV_ID
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.yinlian.wssc.web.po.SkuSpecsvExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from sku_specsv
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from sku_specsv
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		sku_specsv
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.yinlian.wssc.web.po.SkuSpecsvExample">
		delete from sku_specsv
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.yinlian.wssc.web.po.SkuSpecsv">
		insert into sku_specsv (ID,
		SKU_ID, SpecsV_ID
		)
		values (#{id,jdbcType=INTEGER},
		#{skuId,jdbcType=INTEGER},
		#{specsvId,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.yinlian.wssc.web.po.SkuSpecsv">
		insert into sku_specsv
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="skuId != null">
				SKU_ID,
			</if>
			<if test="specsvId != null">
				SpecsV_ID,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="skuId != null">
				#{skuId,jdbcType=INTEGER},
			</if>
			<if test="specsvId != null">
				#{specsvId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.yinlian.wssc.web.po.SkuSpecsvExample"
		resultType="java.lang.Integer">
		select count(*) from sku_specsv
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update sku_specsv
		<set>
			<if test="record.id != null">
				ID = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.skuId != null">
				SKU_ID = #{record.skuId,jdbcType=INTEGER},
			</if>
			<if test="record.specsvId != null">
				SpecsV_ID = #{record.specsvId,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update sku_specsv
		set ID = #{record.id,jdbcType=INTEGER},
		SKU_ID =
		#{record.skuId,jdbcType=INTEGER},
		SpecsV_ID =
		#{record.specsvId,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.yinlian.wssc.web.po.SkuSpecsv">
		update sku_specsv
		<set>
			<if test="skuId != null">
				SKU_ID = #{skuId,jdbcType=INTEGER},
			</if>
			<if test="specsvId != null">
				SpecsV_ID = #{specsvId,jdbcType=INTEGER},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.yinlian.wssc.web.po.SkuSpecsv">
		update sku_specsv
		set SKU_ID = #{skuId,jdbcType=INTEGER},
		SpecsV_ID =
		#{specsvId,jdbcType=INTEGER}
		where ID = #{id,jdbcType=INTEGER}
	</update>


	<!-- 批量添加规格属性值 -->
	<insert id="insertList" parameterType="List">
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		<if test="list != null">
			insert into sku_specsv (ID, SKU_ID, SpecsV_ID
			)
			values
			<foreach collection="list" item="item" index="index"
				separator=",">
				(#{item.id,jdbcType=INTEGER},
				#{item.skuId,jdbcType=INTEGER},
				#{item.specsvId,jdbcType=INTEGER}
				)
			</foreach>
		</if>
	</insert>

	<!-- 批量删除规格属性值 -->
	<delete id="deleteList" parameterType="java.util.List">
		delete from sku_specsv where ID in
		<if test="list != null">
			<foreach collection="list" item="ids" index="index" open="("
				separator="," close=")">
				#{ids}
			</foreach>
		</if>
	</delete>

	<!-- 根据库存商品ID删除关联规格值 -->
	<delete id="deleteBySkuID" parameterType="int">
		delete from sku_specsv
		where SKU_ID =#{0}
	</delete>
	<!--查询添加、编辑sku商品时是否已存在改规格 -->
	<select id="isHaveSpecsv" resultType="com.yinlian.wssc.web.dto.Sku_SpecsvDto" parameterType="map">
		select count(a.SpecsV_ID) as sv_count,a.SKU_ID as skuid  
		from sku_specsv a INNER JOIN sku b on a.SKU_ID=b.ID
        where 
        b.SPU_ID=#{spuid,jdbcType=INTEGER}         
        <if test="ids != null">
        	and a.SpecsV_ID in
			<foreach collection="ids" item="ids" index="index" open="("
				separator="," close=")">
				#{ids}
			</foreach>
		</if>
        GROUP BY a.SKU_ID 
	</select>
</mapper>