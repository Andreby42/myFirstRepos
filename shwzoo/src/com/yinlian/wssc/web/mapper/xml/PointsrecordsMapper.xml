<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yinlian.wssc.web.mapper.PointsrecordsMapper" >
  <resultMap id="BaseResultMap" type="com.yinlian.wssc.web.po.Pointsrecords" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="Points" property="points" jdbcType="INTEGER" />
    <result column="Type" property="type" jdbcType="INTEGER" />
    <result column="FromType" property="fromtype" jdbcType="INTEGER" />
    <result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="UserID" property="userid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, Points, Type, FromType, CreateTime, UserID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yinlian.wssc.web.po.PointsrecordsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pointsrecords
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pointsrecords
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pointsrecords
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yinlian.wssc.web.po.PointsrecordsExample" >
    delete from pointsrecords
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yinlian.wssc.web.po.Pointsrecords" >
    insert into pointsrecords (ID, Points, Type, 
      FromType, CreateTime, UserID
      )
    values (#{id,jdbcType=INTEGER}, #{points,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{fromtype,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{userid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yinlian.wssc.web.po.Pointsrecords" >
    insert into pointsrecords
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="points != null" >
        Points,
      </if>
      <if test="type != null" >
        Type,
      </if>
      <if test="fromtype != null" >
        FromType,
      </if>
      <if test="createtime != null" >
        CreateTime,
      </if>
      <if test="userid != null" >
        UserID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="points != null" >
        #{points,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="fromtype != null" >
        #{fromtype,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yinlian.wssc.web.po.PointsrecordsExample" resultType="java.lang.Integer" >
    select count(*) from pointsrecords
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pointsrecords
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.points != null" >
        Points = #{record.points,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        Type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.fromtype != null" >
        FromType = #{record.fromtype,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        CreateTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userid != null" >
        UserID = #{record.userid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pointsrecords
    set ID = #{record.id,jdbcType=INTEGER},
      Points = #{record.points,jdbcType=INTEGER},
      Type = #{record.type,jdbcType=INTEGER},
      FromType = #{record.fromtype,jdbcType=INTEGER},
      CreateTime = #{record.createtime,jdbcType=TIMESTAMP},
      UserID = #{record.userid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yinlian.wssc.web.po.Pointsrecords" >
    update pointsrecords
    <set >
      <if test="points != null" >
        Points = #{points,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        Type = #{type,jdbcType=INTEGER},
      </if>
      <if test="fromtype != null" >
        FromType = #{fromtype,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        CreateTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null" >
        UserID = #{userid,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yinlian.wssc.web.po.Pointsrecords" >
    update pointsrecords
    set Points = #{points,jdbcType=INTEGER},
      Type = #{type,jdbcType=INTEGER},
      FromType = #{fromtype,jdbcType=INTEGER},
      CreateTime = #{createtime,jdbcType=TIMESTAMP},
      UserID = #{userid,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByuserid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pointsrecords
    where userid = #{userid,jdbcType=INTEGER} and FromType=2
    order by CreateTime desc
  </select>
  <select id="selectByuser" resultType="com.yinlian.wssc.web.po.Pointsrecords" >
    select 
    <include refid="Base_Column_List" />
    from pointsrecords
    where userid = #{userid,jdbcType=INTEGER} and FromType=2 and createtime like '%${createtime}%'
  </select>
  
    <sql id="criteriaPoint">
		  <where>
		   <if test="criteria.userid != null and criteria.userid != '' ">
		    and p.UserID = #{criteria.userid}
		    </if>
		    <if test="criteria.type != null and criteria.type  != '' ">
		    and p.Type = #{criteria.type }
		    </if>
		   <if test="criteria.begintime != null and criteria.begintime != '' ">
			<![CDATA[ and p.CreateTime >= #{criteria.begintime } ]]>
		</if>
		<if test="criteria.endtime != null and criteria.endtime != '' ">
			<![CDATA[ and p.CreateTime <= #{criteria.endtime } ]]>
		</if>
		    </where> 
  </sql>  
   <select id="selectPointByPage" parameterType="com.yinlian.wssc.web.util.PageBeanUtil" resultType="com.yinlian.pc.dto.PcPointsDto">
	   select p.ID as id, p.Points as points, p.Type as type, p.FromType as fromtype, p.CreateTime as createtime, p.UserID as userid
	   from pointsrecords p
     <if test="criteria != null ">
     <include refid="criteriaPoint"/> 
     </if>
     <if test="criteria.orderByClause != null and criteria.orderByClause != '' " >
      order by ${criteria.orderByClause} ${criteria.sort}  <!-- 排序不为空 就排序     此处只能使用${} 而不能使用#{} 会设置参数失败 -->
    </if>
  </select> 
  
  
     <select id="selectPlatformPointByPage" parameterType="com.yinlian.wssc.web.util.PageBeanUtil" resultType="com.yinlian.pc.dto.PcPointsDto">
	   select p.ID as id, p.Points as points, p.Type as type, p.FromType as fromtype, p.CreateTime as createtime, p.UserID as userid,u.username as username
	   from pointsrecords p left join users u on p.UserID=u.id
     <if test="criteria != null ">
     <include refid="criteriaPoints"/> 
     </if>
     <if test="criteria.orderByClause != null and criteria.orderByClause != '' " >
      order by ${criteria.orderByClause} ${criteria.sort}  <!-- 排序不为空 就排序     此处只能使用${} 而不能使用#{} 会设置参数失败 -->
    </if>
  </select> 
  
   <sql id="criteriaPoints">
		  <where>
		   <if test="criteria.buyerid != null and criteria.buyerid > 0 ">
		    and p.UserID = #{criteria.buyerid}
		    </if>
		    <if test="criteria.type != null and criteria.type  >= 0  ">
		    and p.Type = #{criteria.type }
		    </if>
		   <if test="criteria.starttime != null and criteria.starttime != '' ">
			<![CDATA[ and p.CreateTime >= #{criteria.starttime } ]]>
		 	</if>
			<if test="criteria.endtime != null and criteria.endtime != '' ">
				<![CDATA[ and p.CreateTime <= #{criteria.endtime } ]]>
			</if>
		    </where> 
  </sql>  
  
  
</mapper>