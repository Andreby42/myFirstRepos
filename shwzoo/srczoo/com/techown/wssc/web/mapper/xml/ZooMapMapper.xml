<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.techown.wssc.web.mapper.ZooMapMapper">
  <resultMap id="BaseResultMap" type="com.techown.wssc.web.po.ZooMap">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="ext1" jdbcType="VARCHAR" property="ext1" />
    <result column="ext2" jdbcType="VARCHAR" property="ext2" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, url, path, createTime, updateTime, type, operator, state, ext1, ext2
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from zoo_map
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  
  <select id="querylist" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from zoo_map
    <where>
    	<if test="null!=type">
    	   type=#{type}
    	</if>
    	<if test="null!=state">
    		and state=#{state}
    	</if>
    </where>
  </select>
  
  
   <select id="queryMaxTime"  resultMap="BaseResultMap">
   		select type,max(updateTime) as updateTime from  zoo_map group by type
   </select>
  
   <select id="queryLastMap"  resultType="hashMap">
   	select url ,type from zoo_map where id= (select max(id) from zoo_map where type =#{type} and state =#{state})
   </select>
  
  
  <update id="updateState" parameterType="com.techown.wssc.web.po.ZooMap">
    update zoo_map
    set state = #{tgtState,jdbcType=TINYINT} ,
    updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER} 
    and state = #{srcState,jdbcType=TINYINT}
  </update>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from zoo_map
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.techown.wssc.web.po.ZooMap">
    insert into zoo_map (id, name, url, 
      path, createTime, updateTime, 
      type, operator, state, 
      ext1, ext2)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{path,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{type,jdbcType=TINYINT}, #{operator,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT}, 
      #{ext1,jdbcType=VARCHAR}, #{ext2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.techown.wssc.web.po.ZooMap">
    insert into zoo_map
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="ext1 != null">
        ext1,
      </if>
      <if test="ext2 != null">
        ext2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="ext1 != null">
        #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null">
        #{ext2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.techown.wssc.web.po.ZooMap">
    update zoo_map
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="ext1 != null">
        ext1 = #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null">
        ext2 = #{ext2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.techown.wssc.web.po.ZooMap">
    update zoo_map
    set name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=TINYINT},
      operator = #{operator,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT},
      ext1 = #{ext1,jdbcType=VARCHAR},
      ext2 = #{ext2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>