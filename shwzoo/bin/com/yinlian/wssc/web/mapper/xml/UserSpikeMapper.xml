<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yinlian.wssc.web.mapper.UserSpikeMapper">
	<resultMap id="BaseResultMap" type="com.yinlian.wssc.web.po.UserSpike">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="userid" property="userid" jdbcType="INTEGER" />
		<result column="spikeid" property="spikeid" jdbcType="INTEGER" />
		<result column="spikecode" property="spikecode" jdbcType="VARCHAR" />
		<result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
		<result column="isuse" property="isuse" jdbcType="INTEGER" />
		<result column="usetime" property="usetime" jdbcType="TIMESTAMP" />
		<result column="outtime" property="outtime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, userid, spikeid, spikecode, createtime,isuse,usetime,outtime
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.yinlian.wssc.web.po.UserSpikeExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from user_spike
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user_spike
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user_spike
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.yinlian.wssc.web.po.UserSpikeExample">
		delete from user_spike
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.yinlian.wssc.web.po.UserSpike">
		insert into user_spike (id, userid, spikeid,
		spikecode, createtime,isuse,usetime,outtime)
		values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER},
		#{spikeid,jdbcType=INTEGER},
		#{spikecode,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP},
		#{isuse,jdbcType=INTEGER},
		#{usetime,jdbcType=TIMESTAMP},#{outtime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.yinlian.wssc.web.po.UserSpike">
		insert into user_spike
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userid != null">
				userid,
			</if>
			<if test="spikeid != null">
				spikeid,
			</if>
			<if test="spikecode != null">
				spikecode,
			</if>
			<if test="createtime != null">
				createtime,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userid != null">
				#{userid,jdbcType=INTEGER},
			</if>
			<if test="spikeid != null">
				#{spikeid,jdbcType=INTEGER},
			</if>
			<if test="spikecode != null">
				#{spikecode,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.yinlian.wssc.web.po.UserSpikeExample"
		resultType="java.lang.Integer">
		select count(*) from user_spike
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update user_spike
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.userid != null">
				userid = #{record.userid,jdbcType=INTEGER},
			</if>
			<if test="record.spikeid != null">
				spikeid = #{record.spikeid,jdbcType=INTEGER},
			</if>
			<if test="record.spikecode != null">
				spikecode = #{record.spikecode,jdbcType=VARCHAR},
			</if>
			<if test="record.createtime != null">
				createtime = #{record.createtime,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update user_spike
		set id = #{record.id,jdbcType=INTEGER},
		userid = #{record.userid,jdbcType=INTEGER},
		spikeid = #{record.spikeid,jdbcType=INTEGER},
		spikecode = #{record.spikecode,jdbcType=VARCHAR},
		createtime = #{record.createtime,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.yinlian.wssc.web.po.UserSpike">
		update user_spike
		<set>
			<if test="userid != null">
				userid = #{userid,jdbcType=INTEGER},
			</if>
			<if test="spikeid != null">
				spikeid = #{spikeid,jdbcType=INTEGER},
			</if>
			<if test="spikecode != null">
				spikecode = #{spikecode,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				createtime = #{createtime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.yinlian.wssc.web.po.UserSpike">
		update user_spike
		set userid = #{userid,jdbcType=INTEGER},
		spikeid = #{spikeid,jdbcType=INTEGER},
		spikecode = #{spikecode,jdbcType=VARCHAR},
		createtime = #{createtime,jdbcType=TIMESTAMP},
		isuse=#{isuse,jdbcType=INTEGER},
		usetime=#{usetime,jdbcType=TIMESTAMP},
		outtime=#{outtime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="getCode" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user_spike
		where userid=#{0} and spikeid=#{1}
		limit 1
	</select>
	<select id="getbySpikeIDPage" resultType="com.yinlian.wssc.web.dto.ExcitingUserDto"
		parameterType="com.yinlian.wssc.web.util.PageBeanUtil">
		SELECT
		b.id,
		b.isuse,
		b.spikecode,
		b.usetime,
		b.outtime,
		c.LoginName as username,
		c.Phone,
		CASE WHEN b.outtime>SYSDATE() THEN 1 ELSE 0 END AS isout
		FROM user_spike b
		LEFT JOIN accounts c ON b.userid=c.UserID
		<where>
			<if test="criteria.spikeID != null and criteria.spikeID !='' ">
				and b.spikeid=#{criteria.spikeID}
			</if>
		</where>
		<if test="criteria.orderByClause != null and criteria.orderByClause != '' ">
			order by ${criteria.orderByClause} ${criteria.sort}  <!-- 排序不为空 就排序 此处只能使用${} 
				而不能使用#{} 会设置参数失败 -->
		</if>
	</select>
</mapper>