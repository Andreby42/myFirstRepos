<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yinlian.wssc.web.mapper.MessagerecordsMapper" >
  <resultMap id="BaseResultMap" type="com.yinlian.wssc.web.po.Messagerecords" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="Mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="SendTime" property="sendtime" jdbcType="TIMESTAMP" />
    <result column="Type" property="type" jdbcType="INTEGER" />
    <result column="UserID" property="userid" jdbcType="INTEGER" />
    <result column="SendUser" property="senduser" jdbcType="INTEGER" />
    <result column="Title" property="title" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yinlian.wssc.web.po.Messagerecords" extends="BaseResultMap" >
    <result column="Content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, Mobile, SendTime, Type, UserID, SendUser, Title
  </sql>
  <sql id="Blob_Column_List" >
    Content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yinlian.wssc.web.po.MessagerecordsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from messagerecords
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yinlian.wssc.web.po.MessagerecordsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from messagerecords
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from messagerecords
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from messagerecords
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yinlian.wssc.web.po.MessagerecordsExample" >
    delete from messagerecords
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yinlian.wssc.web.po.Messagerecords" >
    insert into messagerecords (ID, Mobile, SendTime, 
      Type, UserID, SendUser, 
      Title, Content)
    values (#{id,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, #{sendtime,jdbcType=TIMESTAMP}, 
      #{type,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{senduser,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yinlian.wssc.web.po.Messagerecords" >
    insert into messagerecords
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="mobile != null" >
        Mobile,
      </if>
      <if test="sendtime != null" >
        SendTime,
      </if>
      <if test="type != null" >
        Type,
      </if>
      <if test="userid != null" >
        UserID,
      </if>
      <if test="senduser != null" >
        SendUser,
      </if>
      <if test="title != null" >
        Title,
      </if>
      <if test="content != null" >
        Content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="sendtime != null" >
        #{sendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="senduser != null" >
        #{senduser,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yinlian.wssc.web.po.MessagerecordsExample" resultType="java.lang.Integer" >
    select count(*) from messagerecords
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update messagerecords
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.mobile != null" >
        Mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.sendtime != null" >
        SendTime = #{record.sendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null" >
        Type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        UserID = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.senduser != null" >
        SendUser = #{record.senduser,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        Title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        Content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update messagerecords
    set ID = #{record.id,jdbcType=INTEGER},
      Mobile = #{record.mobile,jdbcType=VARCHAR},
      SendTime = #{record.sendtime,jdbcType=TIMESTAMP},
      Type = #{record.type,jdbcType=INTEGER},
      UserID = #{record.userid,jdbcType=INTEGER},
      SendUser = #{record.senduser,jdbcType=INTEGER},
      Title = #{record.title,jdbcType=VARCHAR},
      Content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update messagerecords
    set ID = #{record.id,jdbcType=INTEGER},
      Mobile = #{record.mobile,jdbcType=VARCHAR},
      SendTime = #{record.sendtime,jdbcType=TIMESTAMP},
      Type = #{record.type,jdbcType=INTEGER},
      UserID = #{record.userid,jdbcType=INTEGER},
      SendUser = #{record.senduser,jdbcType=INTEGER},
      Title = #{record.title,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yinlian.wssc.web.po.Messagerecords" >
    update messagerecords
    <set >
      <if test="mobile != null" >
        Mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="sendtime != null" >
        SendTime = #{sendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        Type = #{type,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        UserID = #{userid,jdbcType=INTEGER},
      </if>
      <if test="senduser != null" >
        SendUser = #{senduser,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        Title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        Content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yinlian.wssc.web.po.Messagerecords" >
    update messagerecords
    set Mobile = #{mobile,jdbcType=VARCHAR},
      SendTime = #{sendtime,jdbcType=TIMESTAMP},
      Type = #{type,jdbcType=INTEGER},
      UserID = #{userid,jdbcType=INTEGER},
      SendUser = #{senduser,jdbcType=INTEGER},
      Title = #{title,jdbcType=VARCHAR},
      Content = #{content,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yinlian.wssc.web.po.Messagerecords" >
    update messagerecords
    set Mobile = #{mobile,jdbcType=VARCHAR},
      SendTime = #{sendtime,jdbcType=TIMESTAMP},
      Type = #{type,jdbcType=INTEGER},
      UserID = #{userid,jdbcType=INTEGER},
      SendUser = #{senduser,jdbcType=INTEGER},
      Title = #{title,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 批量插入 -->
  <insert id="insertBacth" parameterType="java.util.List">
   insert into messagerecords (ID, Mobile, SendTime, 
      Type, UserID, SendUser, 
      Title, Content)
    values 
     <foreach collection="list" item="item" index="index" separator="," >
        (#{item.id},#{item.mobile},#{item.sendtime},#{item.type},#{item.userid},#{item.senduser},#{item.title},#{item.content})
    </foreach>
  </insert>
  
  <!-- 批量删除 -->
  <delete id="deleteByIds" parameterType="Object[]" >
		delete from messages
		<where>
		<!-- 传递数组 -->
		<if test="array!=null">
		<foreach collection="array" index="index" item="id" open="and id in(" separator="," close=")">
		    #{id} 
		</foreach>
		</if>
		</where>
	</delete>
	
  
    <!-- 根据收件人分页查询已发送的站内信 -->
  <sql id="criteria_query_username">
   <where>
     <if test="criteria.type != null and criteria.type != -1 ">
     and m.type = #{criteria.type}
     </if>
     <if test="criteria.begin != null and criteria.begin != '' and criteria.end != null and criteria.end != ''  ">
      and m.SendTime between #{criteria.begin} and #{criteria.end}
     </if>
      <if test="criteria.username != null and criteria.username != '' ">
     and u.username like '%${criteria.username}%'
     </if>
      <if test="criteria.sendname != null and criteria.sendname != '' ">
     and s.username like '%${criteria.sendname}%'
     </if>
     </where> 
  </sql>
  <select id="selectMessagerecordsByPage" parameterType="com.yinlian.wssc.web.util.PageBeanUtil" resultMap="BaseResultMap">
  SELECT m.*,u.username username 
  FROM messages m  LEFT JOIN users u ON m.userid = u.id
  <if test="criteria != null ">
     <include refid="criteria_query_username"/> 
    </if> 
     <if test="criteria.orderByClause != null and criteria.orderByClause != '' " >
      order by ${criteria.orderByClause} ${criteria.sort}  <!-- 排序不为空 就排序     此处只能使用${} 而不能使用#{} 会设置参数失败 -->
    </if>
  </select>
    <!-- 分页查询已发送的短信 -->
  <sql id="criteria_query">
   <where>
     <if test="criteria.type != null and criteria.type != -1 ">
     and m.type = #{criteria.type}
     </if>
     <if test="criteria.begin != null and criteria.begin != '' and criteria.end != null and criteria.end != ''  ">
      and m.SendTime between #{criteria.begin} and #{criteria.end}
     </if>
      <if test="criteria.username != null and criteria.username != '' ">
     and u.username like '%${criteria.username}%'
     </if>
      <if test="criteria.mobile != null and criteria.mobile != '' ">
     and m.mobile = #{criteria.mobile}
     </if>
      <if test="criteria.sendname != null and criteria.sendname != '' ">
     and s.username like '%${criteria.sendname}%'
     </if>
     </where> 
  </sql>
  <select id="selectMessagerecordByPage" parameterType="com.yinlian.wssc.web.util.PageBeanUtil" resultMap="BaseResultMap">
  SELECT m.*,u.username username ,us.username sendname  FROM messagerecords m
   LEFT JOIN users u ON m.userid = u.id 
   LEFT JOIN users us ON us.id = m.senduser
  <if test="criteria != null ">
     <include refid="criteria_query"/> 
    </if> 
     <if test="criteria.orderByClause != null and criteria.orderByClause != '' " >
      order by ${criteria.orderByClause} ${criteria.sort}  <!-- 排序不为空 就排序     此处只能使用${} 而不能使用#{} 会设置参数失败 -->
    </if>
  </select>
  
  
</mapper>