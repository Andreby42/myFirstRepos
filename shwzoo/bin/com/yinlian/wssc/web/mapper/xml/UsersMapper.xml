<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yinlian.wssc.web.mapper.UsersMapper">
	<resultMap id="BaseResultMap" type="com.yinlian.wssc.web.po.Users">
		<id column="ID" property="id" jdbcType="INTEGER" />
		<result column="UserName" property="username" jdbcType="VARCHAR" />
		<result column="Password" property="password" jdbcType="VARCHAR" />
		<result column="NickName" property="nickname" jdbcType="VARCHAR" />
		<result column="RealName" property="realname" jdbcType="VARCHAR" />
		<result column="Mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="Email" property="email" jdbcType="VARCHAR" />
		<result column="IsMobileCheck" property="ismobilecheck"
			jdbcType="BIT" />
		<result column="IsEmailCheck" property="isemailcheck" jdbcType="BIT" />
		<result column="IDCardType" property="idcardtype" jdbcType="INTEGER" />
		<result column="IDCard" property="idcard" jdbcType="VARCHAR" />
		<result column="Status" property="status" jdbcType="INTEGER" />
		<result column="ImgUrl" property="imgurl" jdbcType="VARCHAR" />
		<result column="Level" property="level" jdbcType="INTEGER" />
		<result column="LevelID" property="levelid" jdbcType="INTEGER" />
		<result column="Points" property="points" jdbcType="INTEGER" />
		<result column="TotalPoints" property="totalpoints" jdbcType="INTEGER" />
		<result column="PayPass" property="paypass" jdbcType="VARCHAR" />
		<result column="PayPassStatus" property="paypassstatus"
			jdbcType="INTEGER" />
		<result column="TotalBeans" property="totalbeans" jdbcType="INTEGER" />
		<result column="AvailableBeans" property="availablebeans"
			jdbcType="INTEGER" />
		<result column="consumeAmount" property="consumeamount"
			jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		ID, UserName, Password, NickName, RealName, Mobile, Email,
		IsMobileCheck,
		IsEmailCheck,
		IDCardType, IDCard, Status, ImgUrl, Level,
		LevelID, Points, TotalPoints, PayPass,
		PayPassStatus, TotalBeans,
		AvailableBeans,consumeAmount
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.yinlian.wssc.web.po.UsersExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from users
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from users
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from users
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.yinlian.wssc.web.po.UsersExample">
		delete from users
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.yinlian.wssc.web.po.Users">
		insert into users (ID,
		UserName, Password,
		NickName, RealName, Mobile,
		Email, IsMobileCheck,
		IsEmailCheck,
		IDCardType, IDCard, Status,
		ImgUrl, Level, LevelID,
		Points, TotalPoints, PayPass,
		PayPassStatus, TotalBeans, AvailableBeans,consumeAmount
		)
		values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{nickname,jdbcType=VARCHAR},
		#{realname,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{ismobilecheck,jdbcType=BIT},
		#{isemailcheck,jdbcType=BIT},
		#{idcardtype,jdbcType=INTEGER},
		#{idcard,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
		#{imgurl,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER},
		#{levelid,jdbcType=INTEGER},
		#{points,jdbcType=INTEGER},
		#{totalpoints,jdbcType=INTEGER}, #{paypass,jdbcType=VARCHAR},
		#{paypassstatus,jdbcType=INTEGER}, #{totalbeans,jdbcType=INTEGER},
		#{availablebeans,jdbcType=INTEGER},#{consumeamount,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.yinlian.wssc.web.po.Users">
		insert into users
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="username != null">
				UserName,
			</if>
			<if test="password != null">
				Password,
			</if>
			<if test="nickname != null">
				NickName,
			</if>
			<if test="realname != null">
				RealName,
			</if>
			<if test="mobile != null">
				Mobile,
			</if>
			<if test="email != null">
				Email,
			</if>
			<if test="ismobilecheck != null">
				IsMobileCheck,
			</if>
			<if test="isemailcheck != null">
				IsEmailCheck,
			</if>
			<if test="idcardtype != null">
				IDCardType,
			</if>
			<if test="idcard != null">
				IDCard,
			</if>
			<if test="status != null">
				Status,
			</if>
			<if test="imgurl != null">
				ImgUrl,
			</if>
			<if test="level != null">
				Level,
			</if>
			<if test="levelid != null">
				LevelID,
			</if>
			<if test="points != null">
				Points,
			</if>
			<if test="totalpoints != null">
				TotalPoints,
			</if>
			<if test="paypass != null">
				PayPass,
			</if>
			<if test="paypassstatus != null">
				PayPassStatus,
			</if>
			<if test="totalbeans != null">
				TotalBeans,
			</if>
			<if test="availablebeans != null">
				AvailableBeans,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				#{nickname,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				#{realname,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="ismobilecheck != null">
				#{ismobilecheck,jdbcType=BIT},
			</if>
			<if test="isemailcheck != null">
				#{isemailcheck,jdbcType=BIT},
			</if>
			<if test="idcardtype != null">
				#{idcardtype,jdbcType=INTEGER},
			</if>
			<if test="idcard != null">
				#{idcard,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="imgurl != null">
				#{imgurl,jdbcType=VARCHAR},
			</if>
			<if test="level != null">
				#{level,jdbcType=INTEGER},
			</if>
			<if test="levelid != null">
				#{levelid,jdbcType=INTEGER},
			</if>
			<if test="points != null">
				#{points,jdbcType=INTEGER},
			</if>
			<if test="totalpoints != null">
				#{totalpoints,jdbcType=INTEGER},
			</if>
			<if test="paypass != null">
				#{paypass,jdbcType=VARCHAR},
			</if>
			<if test="paypassstatus != null">
				#{paypassstatus,jdbcType=INTEGER},
			</if>
			<if test="totalbeans != null">
				#{totalbeans,jdbcType=INTEGER},
			</if>
			<if test="availablebeans != null">
				#{availablebeans,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.yinlian.wssc.web.po.UsersExample"
		resultType="java.lang.Integer">
		select count(*) from users
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update users
		<set>
			<if test="record.id != null">
				ID = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.username != null">
				UserName = #{record.username,jdbcType=VARCHAR},
			</if>
			<if test="record.password != null">
				Password = #{record.password,jdbcType=VARCHAR},
			</if>
			<if test="record.nickname != null">
				NickName = #{record.nickname,jdbcType=VARCHAR},
			</if>
			<if test="record.realname != null">
				RealName = #{record.realname,jdbcType=VARCHAR},
			</if>
			<if test="record.mobile != null">
				Mobile = #{record.mobile,jdbcType=VARCHAR},
			</if>
			<if test="record.email != null">
				Email = #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.ismobilecheck != null">
				IsMobileCheck = #{record.ismobilecheck,jdbcType=BIT},
			</if>
			<if test="record.isemailcheck != null">
				IsEmailCheck = #{record.isemailcheck,jdbcType=BIT},
			</if>
			<if test="record.idcardtype != null">
				IDCardType = #{record.idcardtype,jdbcType=INTEGER},
			</if>
			<if test="record.idcard != null">
				IDCard = #{record.idcard,jdbcType=VARCHAR},
			</if>
			<if test="record.status != null">
				Status = #{record.status,jdbcType=INTEGER},
			</if>
			<if test="record.imgurl != null">
				ImgUrl = #{record.imgurl,jdbcType=VARCHAR},
			</if>
			<if test="record.level != null">
				Level = #{record.level,jdbcType=INTEGER},
			</if>
			<if test="record.levelid != null">
				LevelID = #{record.levelid,jdbcType=INTEGER},
			</if>
			<if test="record.points != null">
				Points = #{record.points,jdbcType=INTEGER},
			</if>
			<if test="record.totalpoints != null">
				TotalPoints = #{record.totalpoints,jdbcType=INTEGER},
			</if>
			<if test="record.paypass != null">
				PayPass = #{record.paypass,jdbcType=VARCHAR},
			</if>
			<if test="record.paypassstatus != null">
				PayPassStatus = #{record.paypassstatus,jdbcType=INTEGER},
			</if>
			<if test="record.totalbeans != null">
				TotalBeans = #{record.totalbeans,jdbcType=INTEGER},
			</if>
			<if test="record.availablebeans != null">
				AvailableBeans =
				#{record.availablebeans,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update users
		set ID = #{record.id,jdbcType=INTEGER},
		UserName =
		#{record.username,jdbcType=VARCHAR},
		Password =
		#{record.password,jdbcType=VARCHAR},
		NickName =
		#{record.nickname,jdbcType=VARCHAR},
		RealName =
		#{record.realname,jdbcType=VARCHAR},
		Mobile =
		#{record.mobile,jdbcType=VARCHAR},
		Email =
		#{record.email,jdbcType=VARCHAR},
		IsMobileCheck =
		#{record.ismobilecheck,jdbcType=BIT},
		IsEmailCheck =
		#{record.isemailcheck,jdbcType=BIT},
		IDCardType =
		#{record.idcardtype,jdbcType=INTEGER},
		IDCard =
		#{record.idcard,jdbcType=VARCHAR},
		Status =
		#{record.status,jdbcType=INTEGER},
		ImgUrl =
		#{record.imgurl,jdbcType=VARCHAR},
		Level =
		#{record.level,jdbcType=INTEGER},
		LevelID =
		#{record.levelid,jdbcType=INTEGER},
		Points =
		#{record.points,jdbcType=INTEGER},
		TotalPoints =
		#{record.totalpoints,jdbcType=INTEGER},
		PayPass =
		#{record.paypass,jdbcType=VARCHAR},
		PayPassStatus =
		#{record.paypassstatus,jdbcType=INTEGER},
		TotalBeans =
		#{record.totalbeans,jdbcType=INTEGER},
		AvailableBeans =
		#{record.availablebeans,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.yinlian.wssc.web.po.Users">
		update users
		<set>
			<if test="username != null">
				UserName = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				Password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				NickName = #{nickname,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				RealName = #{realname,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				Mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				Email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="ismobilecheck != null">
				IsMobileCheck = #{ismobilecheck,jdbcType=BIT},
			</if>
			<if test="isemailcheck != null">
				IsEmailCheck = #{isemailcheck,jdbcType=BIT},
			</if>
			<if test="idcardtype != null">
				IDCardType = #{idcardtype,jdbcType=INTEGER},
			</if>
			<if test="idcard != null">
				IDCard = #{idcard,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				Status = #{status,jdbcType=INTEGER},
			</if>
			<if test="imgurl != null">
				ImgUrl = #{imgurl,jdbcType=VARCHAR},
			</if>
			<if test="level != null">
				Level = #{level,jdbcType=INTEGER},
			</if>
			<if test="levelid != null">
				LevelID = #{levelid,jdbcType=INTEGER},
			</if>
			<if test="points != null">
				Points = #{points,jdbcType=INTEGER},
			</if>
			<if test="totalpoints != null">
				TotalPoints = #{totalpoints,jdbcType=INTEGER},
			</if>
			<if test="paypass != null">
				PayPass = #{paypass,jdbcType=VARCHAR},
			</if>
			<if test="paypassstatus != null">
				PayPassStatus = #{paypassstatus,jdbcType=INTEGER},
			</if>
			<if test="totalbeans != null">
				TotalBeans = #{totalbeans,jdbcType=INTEGER},
			</if>
			<if test="availablebeans != null">
				AvailableBeans = #{availablebeans,jdbcType=INTEGER},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.yinlian.wssc.web.po.Users">
		update users
		set
		UserName = #{username,jdbcType=VARCHAR},
		Password =
		#{password,jdbcType=VARCHAR},
		NickName = #{nickname,jdbcType=VARCHAR},
		RealName = #{realname,jdbcType=VARCHAR},
		Mobile =
		#{mobile,jdbcType=VARCHAR},
		Email = #{email,jdbcType=VARCHAR},
		IsMobileCheck = #{ismobilecheck,jdbcType=BIT},
		IsEmailCheck =
		#{isemailcheck,jdbcType=BIT},
		IDCardType =
		#{idcardtype,jdbcType=INTEGER},
		IDCard = #{idcard,jdbcType=VARCHAR},
		Status = #{status,jdbcType=INTEGER},
		ImgUrl =
		#{imgurl,jdbcType=VARCHAR},
		Level = #{level,jdbcType=INTEGER},
		LevelID =
		#{levelid,jdbcType=INTEGER},
		Points = #{points,jdbcType=INTEGER},
		TotalPoints = #{totalpoints,jdbcType=INTEGER},
		PayPass =
		#{paypass,jdbcType=VARCHAR},
		PayPassStatus =
		#{paypassstatus,jdbcType=INTEGER},
		TotalBeans =
		#{totalbeans,jdbcType=INTEGER},
		AvailableBeans =
		#{availablebeans,jdbcType=INTEGER}
		where ID = #{id,jdbcType=INTEGER}
	</update>


	<!-- 自己写的sql -->

	<select id="selectByFeature" parameterType="com.yinlian.wssc.web.dto.Feature"
		resultType="com.yinlian.wssc.web.po.Users">
		select * from users
		<if test="list != null and list.size>0">
			<include refid="id_query_where" />
		</if>
	</select>

	<sql id="id_query_where">
		<where>
			and ID in
			<foreach collection="list" item="item" index="index" open="("
				close=")" separator=",">
				#{item.userid}
			</foreach>

			<if test="username != null and username != '' ">
				and UserName like '%${username}%'
			</if>
		</where>
	</sql>



	<!-- 返回插入时的自增主键 -->

	<insert id="insertUsers" parameterType="com.yinlian.wssc.web.po.Users">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			select
			LAST_INSERT_ID()
		</selectKey>
		insert into users (ID, UserName, Password,
		NickName, RealName, Mobile,
		Email, IsMobileCheck, IsEmailCheck,
		IDCardType, IDCard, Status,
		ImgUrl,
		Level, LevelID,
		Points, TotalPoints, PayPass,
		PayPassStatus,consumeAmount)
		values
		(#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{nickname,jdbcType=VARCHAR},
		#{realname,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{ismobilecheck,jdbcType=BIT},
		#{isemailcheck,jdbcType=BIT},
		#{idcardtype,jdbcType=INTEGER},
		#{idcard,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
		#{imgurl,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER},
		#{levelid,jdbcType=INTEGER},
		#{points,jdbcType=INTEGER},
		#{totalpoints,jdbcType=INTEGER}, #{paypass,jdbcType=VARCHAR},
		#{paypassstatus,jdbcType=INTEGER},#{consumeamount,jdbcType=INTEGER})
	</insert>

	<!-- 判断是否有重名 -->
	<select id="selectByName" parameterType="com.yinlian.wssc.web.util.CriteriaAccounts"
		resultMap="BaseResultMap">
		SELECT * FROM users
		<if test="loginname !=null and loginname != ''">
			and UserName =#{loginname}
		</if>
		<if test="userid !=null and userid != ''">
			and ID =#{userid}
		</if>
		LIMIT 0,1
	</select>
<select id="findInfo" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from users
    where Mobile = #{mobile,jdbcType=VARCHAR}
  </select>
	<update id="updatePwd">
		update users set Password=#{1} where ID=#{0}
	</update>
	
	<update id="updatePayPwd">
		update users set PayPass=#{1},PayPassStatus=1 where ID=#{0}
	</update>

	<update id="updateByPhone" parameterType="java.util.HashMap">
		update users set
		Password=#{1} where Mobile=#{0}
	</update>

	<select id="selectByNamaPwd" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from users
		where (UserName=#{0} or Mobile=#{0}
		or Email=#{0} ) and
		Password=#{1}
		order by ID desc limit 1
	</select>


	<select id="selectId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from users
		where (UserName=#{0} or Mobile=#{0}
		or Email=#{0} ) and
		Password=#{1}
	</select>


	<!-- <select id="Login" resultMap="BaseResultMap" > select <include refid="Base_Column_List" 
		/> from accounts where (LoginName=#{0} or Phone=#{0} or Email=#{0} ) and 
		Password=#{1} </select> -->

	<!-- 以下是自定义的 接口 分页查询 -->
	<sql id="criteria_query">
		<where>
			<if test="criteria.usertype != null and criteria.usertype != -1 ">
				and a.usertype = #{criteria.usertype}
			</if>
			<if test="criteria.username != null and criteria.username != '' ">
				and u.username like '%${criteria.username}%'
			</if>
			<if test="criteria.mobile != null and criteria.mobile != '' ">
				and u.mobile = #{criteria.mobile}
			</if>
			<if test="criteria.email != null and criteria.email != '' ">
				and u.email = #{criteria.email}
			</if>
			<if
				test="criteria.begin != null and criteria.begin != '' and criteria.end != null and criteria.end != ''  ">
				and a.createTime between #{criteria.begin} and #{criteria.end}
			</if>
			and (a.IsDel = 0 or a.IsDel is null)
		</where>
	</sql>

	<!-- 查询会员信息列表 分页 -->
	<select id="selectMemberListByPage" parameterType="com.yinlian.wssc.web.util.PageBeanUtil"
		resultType="com.yinlian.wssc.web.dto.MemberInfo">
		SELECT a.createtime createtime,u.id id,u.username username,u.mobile
		mobile,u.email email,t.provincename provincename,t.sex sex
		FROM accounts a LEFT JOIN users u ON a.userid = u.id LEFT JOIN user_attr t ON u.id = t.userid
		<if test="criteria != null ">
			<include refid="criteria_query" />
		</if>
		<if test="criteria.orderByClause != null and criteria.orderByClause != '' ">
			order by ${criteria.orderByClause} ${criteria.sort}  <!-- 排序不为空 就排序 此处只能使用${} 
				而不能使用#{} 会设置参数失败 -->
		</if>
	</select>

	<select id="getRowLockById" resultType="com.yinlian.wssc.web.po.Users"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List"></include>
		from users rowlock where id=#{0}
	</select>
	
	<select id="findInfoByname" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from users
    where UserName = #{username,jdbcType=VARCHAR}
   </select>
  <update id="updateuserlevel" parameterType="com.yinlian.wssc.web.po.Users" >
  update users set Level=#{level,jdbcType=INTEGER},
		LevelID=#{levelid,jdbcType=INTEGER}
		where id=#{id,jdbcType=INTEGER}
  </update>
  <update id="updateConsumeAmount" parameterType="int" >
   update users set consumeAmount=#{0}
		where id=#{1}
  </update>
  <update id="updPayPwdByPhone" parameterType="java.lang.String">
  	update users set PayPass=#{1} where Mobile=#{0}
  </update>
  <select id="selectByPhone" resultType="com.yinlian.api.app.dto.UserDto">
  	select u.id,a.loginName from users u
  	left join accounts a on a.UserID=u.ID where a.ChannelType = #{channelType} and u.Mobile = #{phone}
  </select>
  <select id="getByOrderCode" parameterType="java.lang.String" resultMap="BaseResultMap">
	   SELECT b.* FROM userfinance p JOIN orders a ON p.Number=a.Code
	    JOIN users b ON a.BuyerID=b.id where p.Number=#{0} limit 1
	</select>
	 <select id="getUsersListByIds" parameterType="java.lang.String" resultMap="BaseResultMap">
	SELECT id,username from users where id in(${ids})
	</select>
	<select id="getNameByID" parameterType="int" resultType="java.lang.String">
	SELECT username from users where id =#{0} limit 1
	</select>
	
</mapper>