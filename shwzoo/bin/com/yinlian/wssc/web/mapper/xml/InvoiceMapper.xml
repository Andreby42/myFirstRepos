<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yinlian.wssc.web.mapper.InvoiceMapper" >
  <resultMap id="BaseResultMap" type="com.yinlian.wssc.web.po.Invoice" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="UserID" property="userid" jdbcType="INTEGER" />
    <result column="OrderID" property="orderid" jdbcType="CHAR" />
    <result column="Type" property="type" jdbcType="INTEGER" />
    <result column="TitleType" property="titletype" jdbcType="INTEGER" />
    <result column="Title" property="title" jdbcType="VARCHAR" />
    <result column="VaildFlag" property="vaildflag" jdbcType="INTEGER" />
    <result column="DelDate" property="deldate" jdbcType="TIMESTAMP" />
    <result column="Content" property="content" jdbcType="VARCHAR" />
    <result column="Mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="Email" property="email" jdbcType="VARCHAR" />
    <result column="Status" property="status" jdbcType="INTEGER" />
    <result column="CreateDate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="PrintDate" property="printdate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, UserID, OrderID, Type, TitleType, Title, VaildFlag, DelDate, Content, Mobile, 
    Email, Status, CreateDate, PrintDate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yinlian.wssc.web.po.InvoiceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from invoice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from invoice
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from invoice
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yinlian.wssc.web.po.InvoiceExample" >
    delete from invoice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yinlian.wssc.web.po.Invoice" >
    insert into invoice (ID, UserID, OrderID, 
      Type, TitleType, Title, 
      VaildFlag, DelDate, Content, 
      Mobile, Email, Status, 
      CreateDate, PrintDate)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{orderid,jdbcType=CHAR}, 
      #{type,jdbcType=INTEGER}, #{titletype,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{vaildflag,jdbcType=INTEGER}, #{deldate,jdbcType=TIMESTAMP}, #{content,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{createdate,jdbcType=TIMESTAMP}, #{printdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yinlian.wssc.web.po.Invoice" >
    insert into invoice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="userid != null" >
        UserID,
      </if>
      <if test="orderid != null" >
        OrderID,
      </if>
      <if test="type != null" >
        Type,
      </if>
      <if test="titletype != null" >
        TitleType,
      </if>
      <if test="title != null" >
        Title,
      </if>
      <if test="vaildflag != null" >
        VaildFlag,
      </if>
      <if test="deldate != null" >
        DelDate,
      </if>
      <if test="content != null" >
        Content,
      </if>
      <if test="mobile != null" >
        Mobile,
      </if>
      <if test="email != null" >
        Email,
      </if>
      <if test="status != null" >
        Status,
      </if>
      <if test="createdate != null" >
        CreateDate,
      </if>
      <if test="printdate != null" >
        PrintDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="orderid != null" >
        #{orderid,jdbcType=CHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="titletype != null" >
        #{titletype,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="vaildflag != null" >
        #{vaildflag,jdbcType=INTEGER},
      </if>
      <if test="deldate != null" >
        #{deldate,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="printdate != null" >
        #{printdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yinlian.wssc.web.po.InvoiceExample" resultType="java.lang.Integer" >
    select count(*) from invoice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update invoice
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        UserID = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.orderid != null" >
        OrderID = #{record.orderid,jdbcType=CHAR},
      </if>
      <if test="record.type != null" >
        Type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.titletype != null" >
        TitleType = #{record.titletype,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        Title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.vaildflag != null" >
        VaildFlag = #{record.vaildflag,jdbcType=INTEGER},
      </if>
      <if test="record.deldate != null" >
        DelDate = #{record.deldate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null" >
        Content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        Mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        Email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        Status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createdate != null" >
        CreateDate = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.printdate != null" >
        PrintDate = #{record.printdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update invoice
    set ID = #{record.id,jdbcType=INTEGER},
      UserID = #{record.userid,jdbcType=INTEGER},
      OrderID = #{record.orderid,jdbcType=CHAR},
      Type = #{record.type,jdbcType=INTEGER},
      TitleType = #{record.titletype,jdbcType=INTEGER},
      Title = #{record.title,jdbcType=VARCHAR},
      VaildFlag = #{record.vaildflag,jdbcType=INTEGER},
      DelDate = #{record.deldate,jdbcType=TIMESTAMP},
      Content = #{record.content,jdbcType=VARCHAR},
      Mobile = #{record.mobile,jdbcType=VARCHAR},
      Email = #{record.email,jdbcType=VARCHAR},
      Status = #{record.status,jdbcType=INTEGER},
      CreateDate = #{record.createdate,jdbcType=TIMESTAMP},
      PrintDate = #{record.printdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yinlian.wssc.web.po.Invoice" >
    update invoice
    <set >
      <if test="userid != null" >
        UserID = #{userid,jdbcType=INTEGER},
      </if>
      <if test="orderid != null" >
        OrderID = #{orderid,jdbcType=CHAR},
      </if>
      <if test="type != null" >
        Type = #{type,jdbcType=INTEGER},
      </if>
      <if test="titletype != null" >
        TitleType = #{titletype,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        Title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="vaildflag != null" >
        VaildFlag = #{vaildflag,jdbcType=INTEGER},
      </if>
      <if test="deldate != null" >
        DelDate = #{deldate,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        Content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        Mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        Email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createdate != null" >
        CreateDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="printdate != null" >
        PrintDate = #{printdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yinlian.wssc.web.po.Invoice" >
    update invoice
    set UserID = #{userid,jdbcType=INTEGER},
      OrderID = #{orderid,jdbcType=CHAR},
      Type = #{type,jdbcType=INTEGER},
      TitleType = #{titletype,jdbcType=INTEGER},
      Title = #{title,jdbcType=VARCHAR},
      VaildFlag = #{vaildflag,jdbcType=INTEGER},
      DelDate = #{deldate,jdbcType=TIMESTAMP},
      Content = #{content,jdbcType=VARCHAR},
      Mobile = #{mobile,jdbcType=VARCHAR},
      Email = #{email,jdbcType=VARCHAR},
      Status = #{status,jdbcType=INTEGER},
      CreateDate = #{createdate,jdbcType=TIMESTAMP},
      PrintDate = #{printdate,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 获取会员最近使用的3条发票抬头信息 -->
  <select id="getByUserId" parameterType="int" resultType="com.yinlian.api.app.dto.InvoiceDto" >
  SELECT DISTINCT title FROM invoice 
  where UserID=#{0} 
  ORDER BY createdate DESC LIMIT 3
  
  </select>
  
  <select id="queryByOrderId" resultMap="BaseResultMap" parameterType="int" >
    select 
    <include refid="Base_Column_List" />
    from invoice
    where OrderID = #{0}
  </select>
  
  <select id="getByOrderPage" parameterType="com.yinlian.wssc.web.util.PageBeanUtil" 
  resultType="com.yinlian.wssc.web.dto.OrderInvoiceDto">
  SELECT  a.ID,a.Status,a.Type,a.Title,a.TitleType, a.Content,
          a.UserID,b.ID AS orderid,b.Code AS ordercode,
          b.SellerID,b.ShopId,b.IsOwned,b.AddOrderDate,
          b.DeliverDate,a.PrintDate
          FROM invoice a,orders b
          WHERE a.orderid=b.id AND b.ValidFlag=0
          <choose>
			<when test="criteria.isowned ==1">
				and b.IsOwned = true
			</when>
			<otherwise>
				and b.IsOwned=false
			</otherwise>
		</choose>
          <if test="criteria != null ">
			<if test="criteria.ordercode != null and criteria.ordercode != '' ">
			and b.Code like '%${criteria.ordercode}%'
		</if>
		<if test="criteria.type != null and criteria.type >=0 ">
			and a.Type=#{criteria.type}
		</if>
		<if test="criteria.status != null and criteria.status >=0 ">
			and a.Status=#{criteria.status}
		</if>
		<if test="criteria.shopid != null and criteria.shopid >0 ">
			and b.ShopId=#{criteria.shopid}
		</if>
		<if test="criteria.buyid != null and criteria.buyid >0 ">
			and a.UserID=#{criteria.buyid}
		</if>
		<if test="criteria.addbegin != null ">
			and DATEDIFF(b.AddOrderDate,#{criteria.addbegin} )<![CDATA[ >= ]]>0
		</if>
		<if test="criteria.addend != null ">
			and DATEDIFF(b.AddOrderDate,#{criteria.addend} )<![CDATA[ <= ]]>0
		</if>
		 </if>
		<if test="criteria.orderByClause != null and criteria.orderByClause != '' ">
			order by ${criteria.orderByClause} ${criteria.sort}  <!-- 排序不为空 就排序 此处只能使用${} 
				而不能使用#{} 会设置参数失败 -->
		</if>
  </select>
</mapper>